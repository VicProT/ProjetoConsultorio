/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import ModeloBeans.BeansPaciente;
import ModeloBeans.ModeloTabela;
import ModeloConeciton.ConexaoBanco;
import ModeloDao.DaoPaciente;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;

/**
 *
 * @author Victor
 */
public class TelaPacientes extends javax.swing.JFrame {

    BeansPaciente Mod = new BeansPaciente();
    DaoPaciente Cont = new DaoPaciente();
    ConexaoBanco Conex = new ConexaoBanco();
    
    int flag = 0;
    
    public TelaPacientes() {
        initComponents();
        PreencherTabela("select * from paciente order by Nomepaci");//CHAMA A TABELA LOGO AO ABRIR
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        IDPaciente = new javax.swing.JTextField();
        NomePaciente = new javax.swing.JTextField();
        CPFPaciente = new javax.swing.JTextField();
        TelPaciente = new javax.swing.JTextField();
        RGPaciente = new javax.swing.JTextField();
        ProcediPaciente = new javax.swing.JComboBox<>();
        NasciPaciente = new javax.swing.JFormattedTextField();
        NovoPaciente = new javax.swing.JButton();
        EnviarPaciente = new javax.swing.JButton();
        EditarPaciente = new javax.swing.JButton();
        CancelarPaciente = new javax.swing.JButton();
        ExcluirPaciente = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TabelaPacientes = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("ID :");

        jLabel3.setText("Nome:");

        jLabel4.setText("CPF :");

        jLabel5.setText("Telefone :");

        jLabel6.setText("RG :");

        jLabel8.setText("Procedimento :");

        jLabel9.setText("Nascimento :  ");

        IDPaciente.setEnabled(false);

        NomePaciente.setEnabled(false);

        CPFPaciente.setEnabled(false);

        TelPaciente.setEnabled(false);

        RGPaciente.setEnabled(false);

        ProcediPaciente.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Consulta", "Extracao", "Lente de Contado", "Limpeza", "Restauracao", "Cirurgia", " " }));
        ProcediPaciente.setEnabled(false);

        try {
            NasciPaciente.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        NasciPaciente.setEnabled(false);

        NovoPaciente.setText("Novo");
        NovoPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NovoPacienteActionPerformed(evt);
            }
        });

        EnviarPaciente.setText("Enviar");
        EnviarPaciente.setEnabled(false);
        EnviarPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EnviarPacienteActionPerformed(evt);
            }
        });

        EditarPaciente.setText("Editar");
        EditarPaciente.setEnabled(false);
        EditarPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditarPacienteActionPerformed(evt);
            }
        });

        CancelarPaciente.setText("Cancelar");

        ExcluirPaciente.setText("Excluir");
        ExcluirPaciente.setEnabled(false);
        ExcluirPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExcluirPacienteActionPerformed(evt);
            }
        });

        TabelaPacientes.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        TabelaPacientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        TabelaPacientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TabelaPacientesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TabelaPacientes);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(IDPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(NasciPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(NomePaciente))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(TelPaciente))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(CPFPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel8)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(ProcediPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(RGPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(NovoPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(EnviarPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(EditarPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(CancelarPaciente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ExcluirPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 663, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(IDPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(NomePaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(CPFPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(3, 3, 3)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TelPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(RGPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(ProcediPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(NasciPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(NovoPaciente)
                            .addComponent(EnviarPaciente)
                            .addComponent(EditarPaciente))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CancelarPaciente)
                            .addComponent(ExcluirPaciente)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel7.setText("Pacientes");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(409, 409, 409)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(594, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(1091, 440));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void NovoPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NovoPacienteActionPerformed
        flag = 1;
        
        
        NomePaciente.setEnabled(true);
        CPFPaciente.setEnabled(true);
        TelPaciente.setEnabled(true);
        RGPaciente.setEnabled(true);
        ProcediPaciente.setEnabled(true);
        NasciPaciente.setEnabled(true);
        
        EnviarPaciente.setEnabled(true);
        CancelarPaciente.setEnabled(true);
        
        
        NomePaciente.setText("");
        CPFPaciente.setText("");
        TelPaciente.setText("");
        RGPaciente.setText("");
        NasciPaciente.setText("");
        IDPaciente.setText("");
        
        NovoPaciente.setEnabled(false);
        EditarPaciente.setEnabled(false);
        ExcluirPaciente.setEnabled(false);
        
        
    }//GEN-LAST:event_NovoPacienteActionPerformed

    private void EditarPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditarPacienteActionPerformed
        flag = 2;
        NomePaciente.setEnabled(true);
        CPFPaciente.setEnabled(true);
        TelPaciente.setEnabled(true);
        RGPaciente.setEnabled(true);
        ProcediPaciente.setEnabled(true);
        NasciPaciente.setEnabled(true);
        EnviarPaciente.setEnabled(true);
        CancelarPaciente.setEnabled(true);
        
        NovoPaciente.setEnabled(false);
        ExcluirPaciente.setEnabled(false);
        PreencherTabela("select * from paciente order by Nomepaci");//CHAMA A TABELA LOGO AO ABRIR
        
    }//GEN-LAST:event_EditarPacienteActionPerformed

    private void ExcluirPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExcluirPacienteActionPerformed
        int Resposta = 0;
        Resposta =  JOptionPane.showConfirmDialog(rootPane,"Deseja excluir ?");
        if(Resposta == JOptionPane.YES_OPTION){
            Mod.setCoddenPaci(Integer.parseInt(IDPaciente.getText()));
            Cont.Excluir(Mod);
            
            NomePaciente.setEnabled(true);
            CPFPaciente.setEnabled(true);
            TelPaciente.setEnabled(true);
            RGPaciente.setEnabled(true);
            ProcediPaciente.setEnabled(true);
            NasciPaciente.setEnabled(true);
            EnviarPaciente.setEnabled(true);
            CancelarPaciente.setEnabled(true);
        
            NovoPaciente.setEnabled(false);
            ExcluirPaciente.setEnabled(false);
            
            
            EditarPaciente.setEnabled(false);
            ExcluirPaciente.setEnabled(false);
            
            NomePaciente.setText("");
            CPFPaciente.setText("");
            TelPaciente.setText("");
            RGPaciente.setText("");
            NasciPaciente.setText("");
            IDPaciente.setText("");
        }
        PreencherTabela("select * from paciente order by Nomepaci");//CHAMA A TABELA LOGO AO ABRIR
    }//GEN-LAST:event_ExcluirPacienteActionPerformed

    private void EnviarPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EnviarPacienteActionPerformed
       
        
        if(NomePaciente.getText().isEmpty()){
           JOptionPane.showMessageDialog(null, "Preencha o NOME para continuar");
           NomePaciente.requestFocus();
        }
        else if(CPFPaciente.getText().isEmpty()){
           JOptionPane.showMessageDialog(null, "Preencha o CPF para continuar");
           CPFPaciente.requestFocus();
        }
        else if(TelPaciente.getText().isEmpty()){
           JOptionPane.showMessageDialog(null, "Preencha o CPF para continuar");
           TelPaciente.requestFocus();
        }
        else if(RGPaciente.getText().isEmpty()){
           JOptionPane.showMessageDialog(null, "Preencha o TELEFONE para continuar");
           RGPaciente.requestFocus();
        }
        else if(NasciPaciente.getText().isEmpty()){
           JOptionPane.showMessageDialog(null, "Preencha o TELEFONE para continuar");
           NasciPaciente.requestFocus();
        }else
        
        if(flag == 1){
        Mod.setNomePaci(NomePaciente.getText());
        Mod.setCPFPaci(CPFPaciente.getText());
        Mod.setTelPaci(TelPaciente.getText());
        Mod.setRGPaci(RGPaciente.getText());
        Mod.setNasciPaci(NasciPaciente.getText());
        Mod.setProcePaci((String)ProcediPaciente.getSelectedItem());
        Cont.Salvar(Mod);
        
        
        //LIMPA OS CAMPOS
        NomePaciente.setText("");
        CPFPaciente.setText("");
        TelPaciente.setText("");
        RGPaciente.setText("");
        NasciPaciente.setText("");
        IDPaciente.setText("");
        
        //BLOQUEIAS OS CAMPOS
                
        NomePaciente.setEnabled(!true);
        CPFPaciente.setEnabled(!true);
        TelPaciente.setEnabled(!true);
        RGPaciente.setEnabled(!true);
        ProcediPaciente.setEnabled(!true);
        NasciPaciente.setEnabled(!true);
        EnviarPaciente.setEnabled(!true);
        CancelarPaciente.setEnabled(!true);
        
        NomePaciente.setText("");
        CPFPaciente.setText("");
        TelPaciente.setText("");
        RGPaciente.setText("");
        NasciPaciente.setText("");
        IDPaciente.setText("");
        
        }
        else{
        Mod.setCoddenPaci(Integer.parseInt(IDPaciente.getText()));
        Mod.setNomePaci(NomePaciente.getText());
        Mod.setCPFPaci(CPFPaciente.getText());
        Mod.setTelPaci(TelPaciente.getText());
        Mod.setRGPaci(RGPaciente.getText());
        Mod.setNasciPaci(NasciPaciente.getText());
        Mod.setProcePaci((String)ProcediPaciente.getSelectedItem());
        Cont.AlterarSim(Mod);
        
        
        //LIMPA OS CAMPOS
        NomePaciente.setText("");
        CPFPaciente.setText("");
        TelPaciente.setText("");
        RGPaciente.setText("");
        NasciPaciente.setText("");
        IDPaciente.setText("");
        
        //BLOQUEIAS OS CAMPOS
                
        NomePaciente.setEnabled(!true);
        CPFPaciente.setEnabled(!true);
        TelPaciente.setEnabled(!true);
        RGPaciente.setEnabled(!true);
        ProcediPaciente.setEnabled(!true);
        NasciPaciente.setEnabled(!true);
        EnviarPaciente.setEnabled(!true);
        CancelarPaciente.setEnabled(!true);
        
        NomePaciente.setText("");
        CPFPaciente.setText("");
        TelPaciente.setText("");
        RGPaciente.setText("");
        NasciPaciente.setText("");
        IDPaciente.setText("");
     
        }
        PreencherTabela("select * from paciente order by Nomepaci");//CHAMA A TABELA LOGO AO ABRIR
    }//GEN-LAST:event_EnviarPacienteActionPerformed

    private void TabelaPacientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TabelaPacientesMouseClicked
        String NomePAACI =""+TabelaPacientes.getValueAt(TabelaPacientes.getSelectedRow(),1);
        Conex.Conexao();
        Conex.ExecultaSQL("select * from paciente where Nomepaci ='"+NomePAACI+"'");
        try {
            Conex.Rs.first();
            IDPaciente.setText(String.valueOf(Conex.Rs.getInt("Coddenpaci")));
            NomePaciente.setText(Conex.Rs.getString("Nomepaci"));
            CPFPaciente.setText(Conex.Rs.getString("CPFpaci"));
            TelPaciente.setText(Conex.Rs.getString("Telpaci"));
            RGPaciente.setText(Conex.Rs.getString("RGpaci"));
            ProcediPaciente.setSelectedItem(Conex.Rs.getString("Procepaci"));
            NasciPaciente.setText(Conex.Rs.getString("Nascipaci"));
            
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,"Erro no Mouse\n\n"+ex);
        }
        Conex.Desconecta();
        ExcluirPaciente.setEnabled(true);
        EnviarPaciente.setEnabled(false);
        CancelarPaciente.setEnabled(!true);
        EditarPaciente.setEnabled(true);
    }//GEN-LAST:event_TabelaPacientesMouseClicked

     public void PreencherTabela(String Sql){
        ArrayList Dados = new ArrayList();
        String [] Colunas = new String[]{"CODIGO","NOME","CPF","TELEFONE","RG","PROCEDIMENTO","NASCIMENTO"};
        Conex.Conexao();
        Conex.ExecultaSQL(Sql);
        
        try{
            Conex.Rs.first();
            do{
                Dados.add(new Object[]{Conex.Rs.getInt("Coddenpaci"),Conex.Rs.getString("Nomepaci"),Conex.Rs.getString("CPFpaci"),Conex.Rs.getString("Telpaci"),Conex.Rs.getString("RGpaci"),Conex.Rs.getString("Procepaci"),Conex.Rs.getString("Nascipaci")});//LINHA
                
            }while(Conex.Rs.next());//TEM DADOS VAI PERCORRER
        }catch(SQLException ex){
            if(flag > 0){
               JOptionPane.showMessageDialog(rootPane,"Busque novo PACIENTE para preencher tabela"+ex);
            }
            
        }
        ModeloTabela Modelo = new ModeloTabela(Dados,Colunas);
        
        TabelaPacientes.setModel(Modelo);
        TabelaPacientes.getColumnModel().getColumn(0).setPreferredWidth(100);//TAMANHO E LARGURA COLUNA
        TabelaPacientes.getColumnModel().getColumn(0).setResizable(false);//NAO MUDAR O TAMANHO DA COLUNA
        TabelaPacientes.getColumnModel().getColumn(1).setPreferredWidth(200);//TAMANHO E LARGURA COLUNA
        TabelaPacientes.getColumnModel().getColumn(1).setResizable(false);//NAO MUDAR O TAMANHO DA COLUNA
        TabelaPacientes.getColumnModel().getColumn(2).setPreferredWidth(200);//TAMANHO E LARGURA COLUNA
        TabelaPacientes.getColumnModel().getColumn(2).setResizable(false);//NAO MUDAR O TAMANHO DA COLUNA
        TabelaPacientes.getColumnModel().getColumn(3).setPreferredWidth(200);//TAMANHO E LARGURA COLUNA
        TabelaPacientes.getColumnModel().getColumn(3).setResizable(false);//NAO MUDAR O TAMANHO DA COLUNA
        TabelaPacientes.getColumnModel().getColumn(4).setPreferredWidth(200);//TAMANHO E LARGURA COLUNA
        TabelaPacientes.getColumnModel().getColumn(4).setResizable(false);//NAO MUDAR O TAMANHO DA COLUNA
        TabelaPacientes.getColumnModel().getColumn(5).setPreferredWidth(200);//TAMANHO E LARGURA COLUNA
        TabelaPacientes.getColumnModel().getColumn(5).setResizable(false);//NAO MUDAR O TAMANHO DA COLUNA
        TabelaPacientes.getColumnModel().getColumn(6).setPreferredWidth(200);//TAMANHO E LARGURA COLUNA
        TabelaPacientes.getColumnModel().getColumn(6).setResizable(false);//NAO MUDAR O TAMANHO DA COLUNA
        
        
        TabelaPacientes.getTableHeader().setReorderingAllowed(false);//NAO REORDENA CABECALHO
        TabelaPacientes.setAutoResizeMode(TabelaPacientes.AUTO_RESIZE_OFF);//NAO REDIME TABELA
        TabelaPacientes.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);//SO SELECIONA UM DADO POR VEZ
        
        Conex.Desconecta();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaPacientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaPacientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaPacientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaPacientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaPacientes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CPFPaciente;
    private javax.swing.JButton CancelarPaciente;
    private javax.swing.JButton EditarPaciente;
    private javax.swing.JButton EnviarPaciente;
    private javax.swing.JButton ExcluirPaciente;
    private javax.swing.JTextField IDPaciente;
    private javax.swing.JFormattedTextField NasciPaciente;
    private javax.swing.JTextField NomePaciente;
    private javax.swing.JButton NovoPaciente;
    private javax.swing.JComboBox<String> ProcediPaciente;
    private javax.swing.JTextField RGPaciente;
    private javax.swing.JTable TabelaPacientes;
    private javax.swing.JTextField TelPaciente;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
